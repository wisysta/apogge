document.addEventListener("DOMContentLoaded", function () {
    if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
    }
    const a = document.querySelectorAll(".journey-step");
    const b = document.querySelectorAll(".journey-detail-section");
    let c = null;
    let d = false;
    function e() {
        b.forEach((f) => {
            const g = f.getAttribute("data-image");
            const h = f.querySelector(".section-background");
            if (h && g) {
                h.style.backgroundImage = `url('${g}')`;
            }
        });
    }
    function i(j) {
        if (d) {
            return;
        }
        b.forEach((k) => {
            k.classList.remove("expanded");
            k.classList.add("collapsed");
        });
        d = true;
        if (c) {
            clearTimeout(c);
        }
        l(j);
        setTimeout(() => {
            const m = document.getElementById(j);
            if (m) {
                m.classList.remove("collapsed");
                m.classList.add("expanded");
            }
            setTimeout(() => {
                d = false;
            }, 400);
        }, 300);
    }
    function l(n) {
        const o = window.innerWidth <= 768;
        const p =
            document.querySelector(".journey-hero")?.offsetHeight ||
            window.innerHeight;
        const q = parseInt(n.replace("step", "")) - 1;
        let r;
        if (o) {
            const s = window.innerHeight * 0.3;
            r = p + q * s;
            r = Math.max(0, r - 10);
        } else {
            const t = window.innerHeight * 0.5;
            r = p + q * t;
        }
        window.scrollTo({ top: r, behavior: "smooth" });
    }
    a.forEach((u) => {
        u.addEventListener("click", function () {
            const v = this.getAttribute("data-target");
            if (v) {
                i(v);
            }
        });
    });
    b.forEach((w) => {
        w.addEventListener("click", function (x) {
            if (this.classList.contains("expanded")) {
                return;
            }
            const y = this.getAttribute("id");
            if (y) {
                i(y);
            }
        });
    });
    document.addEventListener("keydown", function (z) {
        if (z.key === "Escape") {
            const A = document.querySelector(
                ".journey-detail-section.expanded"
            );
            if (A) {
                A.classList.remove("expanded");
                A.classList.add("collapsed");
            }
        }
    });
    const B = document.querySelector(".header");
    let C = window.scrollY;
    window.addEventListener("scroll", () => {
        const D = window.scrollY;
        if (B) {
            if (D > C && D > 100) {
                B.style.transform = "translateY(-100%)";
            } else {
                B.style.transform = "translateY(0)";
            }
        }
        C = D;
    });
    e();
    window.addEventListener("resize", function () {
        if (window.innerWidth < 768) {
            b.forEach((E) => {
                E.classList.remove("expanded");
                E.classList.add("collapsed");
            });
        }
    });
    F();
    const G = document.querySelector(".journey-hero");
    if (G) {
        setTimeout(() => {
            G.classList.add("loaded");
        }, 300);
    }
    function F() {
        H();
    }
    function H() {
        const I = document.getElementById("map-container");
        if (!I) return;
        const J = window.innerWidth <= 768;
        const K = J
            ? "./images/map-mo.svg"
            : "https://ecimg.cafe24img.com/pg2069b88099925051/cerezia/images/map-pc.svg";
        fetch(K)
            .then((L) => L.text())
            .then((M) => {
                I.innerHTML = M;
                N();
            })
            .catch((O) => {
                console.error("SVG 로드 실패:", O);
            });
    }
    function N() {
        const P = document.querySelector("#map-container svg");
        if (!P) {
            return;
        }
        const Q = P.querySelector("#canada-circle");
        const R = P.querySelector("#canada-marker");
        const S = P.querySelector("#canada-dottted-line");
        const T = P.querySelector("#canada-text");
        const U = P.querySelector("#newzealand-circle");
        const V = P.querySelector("#newzealand-marker");
        const W = P.querySelector("#newzealand-dottted-line");
        const X = P.querySelector("#newzealand-text");
        const Y = document.getElementById("newzealand-detail");
        const Z = document.getElementById("canada-detail");
        let aa = { state: "idle", timers: [], touchActive: false };
        let bb = { state: "idle", timers: [], touchActive: false };
        let cc = null;
        function dd() {
            if (S) {
                S.style.opacity = "0";
                S.style.transition = "opacity 0.6s ease";
            }
            if (T) {
                T.style.opacity = "0";
                T.style.transform = "translateY(15px)";
                T.style.transition = "opacity 0.5s ease, transform 0.5s ease";
            }
            if (W) {
                W.style.opacity = "0";
                W.style.transition = "opacity 0.6s ease";
            }
            if (X) {
                X.style.opacity = "0";
                X.style.transform = "translateY(15px)";
                X.style.transition = "opacity 0.5s ease, transform 0.5s ease";
            }
        }
        function ee() {
            if (aa.state === "showing" || aa.state === "shown") {
                return;
            }
            aa.timers.forEach((ff) => clearTimeout(ff));
            aa.timers = [];
            aa.state = "showing";
            if (S) {
                S.style.opacity = "1";
            }
            const gg = setTimeout(() => {
                if (T) {
                    T.style.opacity = "1";
                    T.style.transform = "translateY(0)";
                }
                const hh = setTimeout(() => {
                    aa.state = "shown";
                }, 500);
                aa.timers.push(hh);
            }, 200);
            aa.timers.push(gg);
            if (Z) {
                const ii = setTimeout(() => {
                    if (cc && cc !== Z) {
                        cc.classList.remove("active");
                    }
                    Z.classList.add("active");
                    cc = Z;
                }, 500);
                aa.timers.push(ii);
            }
        }
        function jj() {
            if (aa.touchActive) {
                return;
            }
            aa.timers.forEach((kk) => clearTimeout(kk));
            aa.timers = [];
            aa.state = "hiding";
            if (T) {
                T.style.opacity = "0";
                T.style.transform = "translateY(15px)";
            }
            const ll = setTimeout(() => {
                if (S) {
                    S.style.opacity = "0";
                }
                const mm = setTimeout(() => {
                    aa.state = "idle";
                }, 600);
                aa.timers.push(mm);
            }, 100);
            aa.timers.push(ll);
            if (Z && cc === Z && !aa.touchActive) {
                Z.classList.remove("active");
                cc = null;
            }
        }
        function nn() {
            if (bb.state === "showing" || bb.state === "shown") {
                return;
            }
            bb.timers.forEach((oo) => clearTimeout(oo));
            bb.timers = [];
            bb.state = "showing";
            if (W) {
                W.style.opacity = "1";
            }
            const pp = setTimeout(() => {
                if (X) {
                    X.style.opacity = "1";
                    X.style.transform = "translateY(0)";
                }
                const qq = setTimeout(() => {
                    bb.state = "shown";
                }, 500);
                bb.timers.push(qq);
            }, 200);
            bb.timers.push(pp);
            if (Y) {
                const rr = setTimeout(() => {
                    if (cc && cc !== Y) {
                        cc.classList.remove("active");
                    }
                    Y.classList.add("active");
                    cc = Y;
                }, 500);
                bb.timers.push(rr);
            }
        }
        function ss() {
            if (bb.touchActive) {
                return;
            }
            bb.timers.forEach((tt) => clearTimeout(tt));
            bb.timers = [];
            bb.state = "hiding";
            if (X) {
                X.style.opacity = "0";
                X.style.transform = "translateY(15px)";
            }
            const uu = setTimeout(() => {
                if (W) {
                    W.style.opacity = "0";
                }
                const vv = setTimeout(() => {
                    bb.state = "idle";
                }, 600);
                bb.timers.push(vv);
            }, 100);
            bb.timers.push(uu);
            if (Y && cc === Y && !bb.touchActive) {
                Y.classList.remove("active");
                cc = null;
            }
        }
        function ww() {
            if (aa.touchActive) {
                aa.touchActive = false;
                jj();
            } else {
                bb.touchActive = false;
                ss();
                aa.touchActive = true;
                ee();
            }
        }
        function xx() {
            if (bb.touchActive) {
                bb.touchActive = false;
                ss();
            } else {
                aa.touchActive = false;
                jj();
                bb.touchActive = true;
                nn();
            }
        }
        dd();
        if (Q) {
            Q.addEventListener("mouseenter", ee);
            Q.addEventListener("mouseleave", jj);
            Q.addEventListener("click", ww);
            Q.addEventListener("touchend", function (yy) {
                yy.preventDefault();
                ww();
            });
            Q.style.cursor = "pointer";
        }
        if (R) {
            R.addEventListener("mouseenter", ee);
            R.addEventListener("mouseleave", jj);
            R.addEventListener("click", ww);
            R.addEventListener("touchend", function (zz) {
                zz.preventDefault();
                ww();
            });
            R.style.cursor = "pointer";
        }
        if (U) {
            U.addEventListener("mouseenter", nn);
            U.addEventListener("mouseleave", ss);
            U.addEventListener("click", xx);
            U.addEventListener("touchend", function (aaa) {
                aaa.preventDefault();
                xx();
            });
            U.style.cursor = "pointer";
        }
        if (V) {
            V.addEventListener("mouseenter", nn);
            V.addEventListener("mouseleave", ss);
            V.addEventListener("click", xx);
            V.addEventListener("touchend", function (bbb) {
                bbb.preventDefault();
                xx();
            });
            V.style.cursor = "pointer";
        }
        document.addEventListener("click", function (eee) {
            const fff = document.getElementById("map-container");
            if (fff && !fff.contains(eee.target)) {
                aa.touchActive = false;
                bb.touchActive = false;
                jj();
                ss();
                if (cc) {
                    cc.classList.remove("active");
                    cc = null;
                }
            }
        });
        document.addEventListener("keydown", (ggg) => {
            if (ggg.key === "Escape") {
                aa.touchActive = false;
                bb.touchActive = false;
                jj();
                ss();
                if (cc) {
                    cc.classList.remove("active");
                    cc = null;
                }
            }
        });
        let hhh;
        window.addEventListener("scroll", () => {
            clearTimeout(hhh);
            hhh = setTimeout(() => {
                if (cc) {
                    cc.classList.remove("active");
                    cc = null;
                    aa.touchActive = false;
                    bb.touchActive = false;
                    jj();
                    ss();
                }
            }, 100);
        });
    }
    window.addEventListener("resize", () => {
        const iii = document.getElementById("map-container");
        if (iii && iii.innerHTML) {
            H();
        }
    });
});
