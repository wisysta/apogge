document.addEventListener("DOMContentLoaded", function () {
    if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
    }
    const journeySteps = document.querySelectorAll(".journey-step");
    const detailSections = document.querySelectorAll(".journey-detail-section");
    let scrollTimer = null;
    let isScrolling = false;
    function initializeBackgrounds() {
        detailSections.forEach((section) => {
            const imagePath = section.getAttribute("data-image");
            const background = section.querySelector(".section-background");
            if (background && imagePath) {
                background.style.backgroundImage = `url('${imagePath}')`;
            }
        });
    }
    function expandSection(sectionId) {
        if (isScrolling) {
            return;
        }
        detailSections.forEach((section) => {
            section.classList.remove("expanded");
            section.classList.add("collapsed");
        });
        isScrolling = true;
        if (scrollTimer) {
            clearTimeout(scrollTimer);
        }
        scrollToSectionByIndex(sectionId);
        setTimeout(() => {
            const targetSection = document.getElementById(sectionId);
            if (targetSection) {
                targetSection.classList.remove("collapsed");
                targetSection.classList.add("expanded");
            }
            setTimeout(() => {
                isScrolling = false;
            }, 400);
        }, 300);
    }
    function collapseSection(section) {
        section.classList.remove("expanded");
        section.classList.add("collapsed");
    }
    function collapseAllSections() {
        detailSections.forEach((section) => {
            section.classList.remove("expanded");
            section.classList.add("collapsed");
        });
    }
    journeySteps.forEach((step) => {
        step.addEventListener("click", function () {
            const targetId = this.getAttribute("data-target");
            if (targetId) {
                expandSection(targetId);
            }
        });
    });
    detailSections.forEach((section) => {
        section.addEventListener("click", function (e) {
            if (this.classList.contains("expanded")) {
                return;
            }
            const sectionId = this.getAttribute("id");
            if (sectionId) {
                expandSection(sectionId);
            }
        });
    });
    document.addEventListener("keydown", function (e) {
        if (e.key === "Escape") {
            const expandedSection = document.querySelector(
                ".journey-detail-section.expanded"
            );
            if (expandedSection) {
                collapseSection(expandedSection);
            }
        }
    });
    const header = document.querySelector(".header");
    let lastScrollY = window.scrollY;
    window.addEventListener("scroll", () => {
        const currentScrollY = window.scrollY;
        if (header) {
            if (currentScrollY > lastScrollY && currentScrollY > 100) {
                header.style.transform = "translateY(-100%)";
            } else {
                header.style.transform = "translateY(0)";
            }
        }
        lastScrollY = currentScrollY;
    });
    initializeBackgrounds();
    window.addEventListener("resize", function () {
        if (window.innerWidth < 768) {
            detailSections.forEach((section) => {
                section.classList.remove("expanded");
                section.classList.add("collapsed");
            });
        }
    });
    function scrollToSection(target) {
        if (target) {
            window.scrollTo({ top: target.offsetTop, behavior: "smooth" });
        }
    }
    function scrollToSectionByIndex(sectionId) {
        const isMobile = window.innerWidth <= 768;
        const heroHeight =
            document.querySelector(".journey-hero")?.offsetHeight ||
            window.innerHeight;
        const sectionIndex = parseInt(sectionId.replace("step", "")) - 1;
        let targetPosition;
        if (isMobile) {
            const collapsedHeight = window.innerHeight * 0.3;
            targetPosition = heroHeight + sectionIndex * collapsedHeight;
            targetPosition = Math.max(0, targetPosition - 10);
        } else {
            const collapsedHeight = window.innerHeight * 0.5;
            targetPosition = heroHeight + sectionIndex * collapsedHeight;
        }
        window.scrollTo({ top: targetPosition, behavior: "smooth" });
    }
    initializeOriginSection();
    const heroSection = document.querySelector(".journey-hero");
    if (heroSection) {
        setTimeout(() => {
            heroSection.classList.add("loaded");
        }, 300);
    }
    console.log("Journey 페이지 스크립트 로드 완료");
    function initializeOriginSection() {
        loadMapSVG();
    }
    function loadMapSVG() {
        const mapContainer = document.getElementById("map-container");
        if (!mapContainer) return;
        const isMobile = window.innerWidth <= 768;
        const svgPath = isMobile
            ? "./images/map-mo.svg"
            : "https://ecimg.cafe24img.com/pg2069b88099925051/cerezia/images/map-pc.svg";
        fetch(svgPath)
            .then((response) => response.text())
            .then((svgText) => {
                mapContainer.innerHTML = svgText;
                setupMapInteractions();
            })
            .catch((error) => {
                console.error("SVG 로드 실패:", error);
            });
    }
    function setupMapInteractions() {
        const svg = document.querySelector("#map-container svg");
        if (!svg) {
            console.error("SVG 요소를 찾을 수 없습니다");
            return;
        }
        console.log("SVG 로딩 성공, 내용 길이:", svg.outerHTML.length);
        const canadaCircle = svg.querySelector("#canada-circle");
        const canadaMarker = svg.querySelector("#canada-marker");
        const canadaDottedLine = svg.querySelector("#canada-dottted-line");
        const canadaText = svg.querySelector("#canada-text");
        const newzealandCircle = svg.querySelector("#newzealand-circle");
        const newzealandMarker = svg.querySelector("#newzealand-marker");
        const newzealandDottedLine = svg.querySelector(
            "#newzealand-dottted-line"
        );
        const newzealandText = svg.querySelector("#newzealand-text");
        const newzealandDetail = document.getElementById("newzealand-detail");
        const canadaDetail = document.getElementById("canada-detail");
        let canadaAnimation = { state: "idle", timers: [], touchActive: false };
        let newzealandAnimation = {
            state: "idle",
            timers: [],
            touchActive: false,
        };
        let activeDetail = null;
        function initializeElements() {
            if (canadaDottedLine) {
                canadaDottedLine.style.opacity = "0";
                canadaDottedLine.style.transition = "opacity 0.6s ease";
            }
            if (canadaText) {
                canadaText.style.opacity = "0";
                canadaText.style.transform = "translateY(15px)";
                canadaText.style.transition =
                    "opacity 0.5s ease, transform 0.5s ease";
            }
            if (newzealandDottedLine) {
                newzealandDottedLine.style.opacity = "0";
                newzealandDottedLine.style.transition = "opacity 0.6s ease";
            }
            if (newzealandText) {
                newzealandText.style.opacity = "0";
                newzealandText.style.transform = "translateY(15px)";
                newzealandText.style.transition =
                    "opacity 0.5s ease, transform 0.5s ease";
            }
        }
        function showCanadaAnimation() {
            if (
                canadaAnimation.state === "showing" ||
                canadaAnimation.state === "shown"
            ) {
                return;
            }
            clearCanadaTimers();
            canadaAnimation.state = "showing";
            executeCanadaShow();
            if (canadaDetail) {
                const detailTimer = setTimeout(() => {
                    if (activeDetail && activeDetail !== canadaDetail) {
                        activeDetail.classList.remove("active");
                    }
                    canadaDetail.classList.add("active");
                    activeDetail = canadaDetail;
                }, 500);
                canadaAnimation.timers.push(detailTimer);
            }
        }
        function hideCanadaAnimation() {
            if (canadaAnimation.touchActive) {
                return;
            }
            if (canadaAnimation.state === "showing") {
                const delayTimer = setTimeout(() => {
                    executeCanadaHide();
                    hideCanadaDetail();
                }, 500);
                canadaAnimation.timers.push(delayTimer);
                return;
            }
            if (canadaAnimation.state === "hiding") {
                return;
            }
            executeCanadaHide();
            hideCanadaDetail();
        }
        function hideCanadaDetail() {
            if (
                canadaDetail &&
                activeDetail === canadaDetail &&
                !canadaAnimation.touchActive
            ) {
                canadaDetail.classList.remove("active");
                activeDetail = null;
            }
        }
        function executeCanadaShow() {
            if (canadaDottedLine) {
                canadaDottedLine.style.opacity = "1";
            }
            const textTimer = setTimeout(() => {
                if (canadaText) {
                    canadaText.style.opacity = "1";
                    canadaText.style.transform = "translateY(0)";
                }
                const completeTimer = setTimeout(() => {
                    canadaAnimation.state = "shown";
                }, 500);
                canadaAnimation.timers.push(completeTimer);
            }, 200);
            canadaAnimation.timers.push(textTimer);
        }
        function executeCanadaHide() {
            clearCanadaTimers();
            canadaAnimation.state = "hiding";
            if (canadaText) {
                canadaText.style.opacity = "0";
                canadaText.style.transform = "translateY(15px)";
            }
            const lineTimer = setTimeout(() => {
                if (canadaDottedLine) {
                    canadaDottedLine.style.opacity = "0";
                }
                const resetTimer = setTimeout(() => {
                    canadaAnimation.state = "idle";
                }, 600);
                canadaAnimation.timers.push(resetTimer);
            }, 100);
            canadaAnimation.timers.push(lineTimer);
        }
        function clearCanadaTimers() {
            canadaAnimation.timers.forEach((timer) => clearTimeout(timer));
            canadaAnimation.timers = [];
        }
        function showNewzealandAnimation() {
            if (
                newzealandAnimation.state === "showing" ||
                newzealandAnimation.state === "shown"
            ) {
                return;
            }
            clearNewzealandTimers();
            newzealandAnimation.state = "showing";
            executeNewzealandShow();
            if (newzealandDetail) {
                const detailTimer = setTimeout(() => {
                    if (activeDetail && activeDetail !== newzealandDetail) {
                        activeDetail.classList.remove("active");
                    }
                    newzealandDetail.classList.add("active");
                    activeDetail = newzealandDetail;
                }, 500);
                newzealandAnimation.timers.push(detailTimer);
            }
        }
        function hideNewzealandAnimation() {
            if (newzealandAnimation.touchActive) {
                return;
            }
            if (newzealandAnimation.state === "showing") {
                const delayTimer = setTimeout(() => {
                    executeNewzealandHide();
                    hideNewzealandDetail();
                }, 500);
                newzealandAnimation.timers.push(delayTimer);
                return;
            }
            if (newzealandAnimation.state === "hiding") {
                return;
            }
            executeNewzealandHide();
            hideNewzealandDetail();
        }
        function hideNewzealandDetail() {
            if (
                newzealandDetail &&
                activeDetail === newzealandDetail &&
                !newzealandAnimation.touchActive
            ) {
                newzealandDetail.classList.remove("active");
                activeDetail = null;
            }
        }
        function executeNewzealandShow() {
            if (newzealandDottedLine) {
                newzealandDottedLine.style.opacity = "1";
            }
            const textTimer = setTimeout(() => {
                if (newzealandText) {
                    newzealandText.style.opacity = "1";
                    newzealandText.style.transform = "translateY(0)";
                }
                const completeTimer = setTimeout(() => {
                    newzealandAnimation.state = "shown";
                }, 500);
                newzealandAnimation.timers.push(completeTimer);
            }, 200);
            newzealandAnimation.timers.push(textTimer);
        }
        function executeNewzealandHide() {
            clearNewzealandTimers();
            newzealandAnimation.state = "hiding";
            if (newzealandText) {
                newzealandText.style.opacity = "0";
                newzealandText.style.transform = "translateY(15px)";
            }
            const lineTimer = setTimeout(() => {
                if (newzealandDottedLine) {
                    newzealandDottedLine.style.opacity = "0";
                }
                const resetTimer = setTimeout(() => {
                    newzealandAnimation.state = "idle";
                }, 600);
                newzealandAnimation.timers.push(resetTimer);
            }, 100);
            newzealandAnimation.timers.push(lineTimer);
        }
        function clearNewzealandTimers() {
            newzealandAnimation.timers.forEach((timer) => clearTimeout(timer));
            newzealandAnimation.timers = [];
        }
        function toggleRegionDetail(detailElement, region) {
            if (activeDetail === detailElement) {
                detailElement.classList.remove("active");
                activeDetail = null;
                return;
            }
            if (activeDetail) {
                activeDetail.classList.remove("active");
            }
            detailElement.classList.add("active");
            activeDetail = detailElement;
        }
        function handleCanadaTouch() {
            if (canadaAnimation.touchActive) {
                canadaAnimation.touchActive = false;
                executeCanadaHide();
                hideCanadaDetail();
            } else {
                newzealandAnimation.touchActive = false;
                executeNewzealandHide();
                hideNewzealandDetail();
                canadaAnimation.touchActive = true;
                showCanadaAnimation();
            }
        }
        function handleNewzealandTouch() {
            if (newzealandAnimation.touchActive) {
                newzealandAnimation.touchActive = false;
                executeNewzealandHide();
                hideNewzealandDetail();
            } else {
                canadaAnimation.touchActive = false;
                executeCanadaHide();
                hideCanadaDetail();
                newzealandAnimation.touchActive = true;
                showNewzealandAnimation();
            }
        }
        initializeElements();
        if (canadaCircle) {
            canadaCircle.addEventListener("mouseenter", showCanadaAnimation);
            canadaCircle.addEventListener("mouseleave", hideCanadaAnimation);
            canadaCircle.addEventListener("click", handleCanadaTouch);
            canadaCircle.addEventListener("touchend", function (e) {
                e.preventDefault();
                handleCanadaTouch();
            });
            canadaCircle.style.cursor = "pointer";
            console.log("캐나다 원 이벤트 등록 완료");
        } else {
            console.warn("캐나다 원 요소를 찾을 수 없습니다: #canada-circle");
        }
        if (canadaMarker) {
            canadaMarker.addEventListener("mouseenter", showCanadaAnimation);
            canadaMarker.addEventListener("mouseleave", hideCanadaAnimation);
            canadaMarker.addEventListener("click", handleCanadaTouch);
            canadaMarker.addEventListener("touchend", function (e) {
                e.preventDefault();
                handleCanadaTouch();
            });
            canadaMarker.style.cursor = "pointer";
            console.log("캐나다 마커 이벤트 등록 완료");
        } else {
            console.warn("캐나다 마커 요소를 찾을 수 없습니다: #canada-marker");
        }
        if (newzealandCircle) {
            newzealandCircle.addEventListener(
                "mouseenter",
                showNewzealandAnimation
            );
            newzealandCircle.addEventListener(
                "mouseleave",
                hideNewzealandAnimation
            );
            newzealandCircle.addEventListener("click", handleNewzealandTouch);
            newzealandCircle.addEventListener("touchend", function (e) {
                e.preventDefault();
                handleNewzealandTouch();
            });
            newzealandCircle.style.cursor = "pointer";
            console.log("뉴질랜드 원 이벤트 등록 완료");
        } else {
            console.warn(
                "뉴질랜드 원 요소를 찾을 수 없습니다: #newzealand-circle"
            );
        }
        if (newzealandMarker) {
            newzealandMarker.addEventListener(
                "mouseenter",
                showNewzealandAnimation
            );
            newzealandMarker.addEventListener(
                "mouseleave",
                hideNewzealandAnimation
            );
            newzealandMarker.addEventListener("click", handleNewzealandTouch);
            newzealandMarker.addEventListener("touchend", function (e) {
                e.preventDefault();
                handleNewzealandTouch();
            });
            newzealandMarker.style.cursor = "pointer";
            console.log("뉴질랜드 마커 이벤트 등록 완료");
        } else {
            console.warn(
                "뉴질랜드 마커 요소를 찾을 수 없습니다: #newzealand-marker"
            );
        }
        const originSection = document.querySelector(".origin-section");
        if (originSection) {
            originSection.addEventListener("click", (e) => {
                if (
                    !e.target.closest(".region-detail") &&
                    !e.target.closest("#canada-circle") &&
                    !e.target.closest("#canada-marker") &&
                    !e.target.closest("#newzealand-circle") &&
                    !e.target.closest("#newzealand-marker")
                ) {
                    if (activeDetail) {
                        activeDetail.classList.remove("active");
                        activeDetail = null;
                    }
                    canadaAnimation.touchActive = false;
                    newzealandAnimation.touchActive = false;
                    executeCanadaHide();
                    executeNewzealandHide();
                }
            });
        }
        document.addEventListener("click", function (e) {
            const mapContainer = document.getElementById("map-container");
            if (mapContainer && !mapContainer.contains(e.target)) {
                canadaAnimation.touchActive = false;
                newzealandAnimation.touchActive = false;
                executeCanadaHide();
                executeNewzealandHide();
                if (activeDetail) {
                    activeDetail.classList.remove("active");
                    activeDetail = null;
                }
            }
        });
        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
                canadaAnimation.touchActive = false;
                newzealandAnimation.touchActive = false;
                executeCanadaHide();
                executeNewzealandHide();
                if (activeDetail) {
                    activeDetail.classList.remove("active");
                    activeDetail = null;
                }
            }
        });
        let scrollTimer;
        window.addEventListener("scroll", () => {
            clearTimeout(scrollTimer);
            scrollTimer = setTimeout(() => {
                if (activeDetail) {
                    activeDetail.classList.remove("active");
                    activeDetail = null;
                    canadaAnimation.touchActive = false;
                    newzealandAnimation.touchActive = false;
                    executeCanadaHide();
                    executeNewzealandHide();
                }
            }, 100);
        });
    }
    window.addEventListener("resize", () => {
        const mapContainer = document.getElementById("map-container");
        if (mapContainer && mapContainer.innerHTML) {
            loadMapSVG();
        }
    });
});
