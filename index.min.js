function a() {
    const b = window.visualViewport
        ? window.visualViewport.height
        : window.innerHeight;
    const c = b * 0.01;
    document.documentElement.style.setProperty("--vh", `${c}px`);
}
let d = window.innerHeight;
let e = false;
function f() {
    if (!e) {
        a();
        d = window.innerHeight;
        e = true;
    }
}
if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", f);
} else {
    f();
}
window.addEventListener("orientationchange", () => {
    setTimeout(() => {
        a();
        d = window.innerHeight;
    }, 100);
});
if (window.visualViewport) {
    window.visualViewport.addEventListener("resize", () => {
        const b = window.visualViewport.height;
        const c = Math.abs(b - d);
        if (c > 100) {
            a();
            d = b;
        }
    });
}
function g() {
    function h() {
        const i = document.getElementById("map-container");
        if (!i) return;
        const j = window.innerWidth <= 768;
        const k = j ? "./images/map-mo.svg" : "./images/map.svg";
        fetch(k)
            .then((l) => l.text())
            .then((m) => {
                i.innerHTML = m;
                n();
                o();
            })
            .catch((p) => {
                console.error("SVG 로드 실패:", p);
            });
    }
    function n() {
        const q = document.querySelector("#map-container svg");
        if (!q) return;
        const r = q.querySelector("#canada-round");
        const s = q.querySelector("#canada-circle");
        const t = q.querySelector("#newzealand-round");
        const u = q.querySelector("#newzealand-circle");
        if (r) v(r, "0s");
        if (s) v(s, "0.5s");
        if (t) v(t, "0s");
        if (u) v(u, "0.5s");
    }
    function v(w, x) {
        const y = document.createElementNS(
            "http://www.w3.org/2000/svg",
            "animate"
        );
        y.setAttribute("attributeName", "fill-opacity");
        y.setAttribute("values", "0.1;0.6;0.1");
        y.setAttribute("dur", "3s");
        y.setAttribute("begin", x);
        y.setAttribute("repeatCount", "indefinite");
        w.appendChild(y);
    }
    function o() {
        const q = document.querySelector("#map-container svg");
        if (!q) return;
        const z = q.querySelector("#canada-circle");
        const A = q.querySelector("#canada-dottted-line");
        const B = q.querySelector("#canada-text");
        const C = q.querySelector("#newzealand-circle");
        const D = q.querySelector("#newzealand-dottted-line");
        const E = q.querySelector("#newzealand-text");
        let F = { state: "idle", timers: [], touchActive: false };
        let G = { state: "idle", timers: [], touchActive: false };
        function H() {
            if (A) {
                A.style.opacity = "0";
                A.style.transition = "opacity 0.5s ease";
            }
            if (B) {
                B.style.opacity = "0";
                B.style.transform = "translateY(10px)";
                B.style.transition = "opacity 0.4s ease, transform 0.4s ease";
            }
            if (D) {
                D.style.opacity = "0";
                D.style.transition = "opacity 0.5s ease";
            }
            if (E) {
                E.style.opacity = "0";
                E.style.transform = "translateY(10px)";
                E.style.transition = "opacity 0.4s ease, transform 0.4s ease";
            }
        }
        function I() {
            if (F.state === "showing" || F.state === "shown") {
                return;
            }
            J();
            F.state = "showing";
            K();
        }
        function L() {
            if (F.touchActive) {
                return;
            }
            if (F.state === "showing") {
                const M = setTimeout(() => {
                    N();
                }, 800);
                F.timers.push(M);
                return;
            }
            if (F.state === "hiding") {
                return;
            }
            N();
        }
        function K() {
            if (A) {
                A.style.opacity = "1";
            }
            const O = setTimeout(() => {
                if (B) {
                    B.style.opacity = "1";
                    B.style.transform = "translateY(0)";
                }
                const P = setTimeout(() => {
                    F.state = "shown";
                }, 400);
                F.timers.push(P);
            }, 300);
            F.timers.push(O);
        }
        function N() {
            J();
            F.state = "hiding";
            if (B) {
                B.style.opacity = "0";
                B.style.transform = "translateY(10px)";
            }
            const Q = setTimeout(() => {
                if (A) {
                    A.style.opacity = "0";
                }
                const R = setTimeout(() => {
                    F.state = "idle";
                }, 500);
                F.timers.push(R);
            }, 100);
            F.timers.push(Q);
        }
        function J() {
            F.timers.forEach((S) => clearTimeout(S));
            F.timers = [];
        }
        H();
        if (z) {
            z.addEventListener("mouseenter", I);
            z.addEventListener("mouseleave", L);
            z.addEventListener("click", function () {
                if (F.touchActive) {
                    F.touchActive = false;
                    N();
                } else {
                    G.touchActive = false;
                    F.touchActive = true;
                    I();
                }
            });
            z.style.cursor = "pointer";
        }
        if (C) {
            C.addEventListener("mouseenter", function () {
                if (G.state === "showing" || G.state === "shown") {
                    return;
                }
                G.timers.forEach((dd) => clearTimeout(dd));
                G.timers = [];
                G.state = "showing";
                if (D) {
                    D.style.opacity = "1";
                }
                const Z = setTimeout(() => {
                    if (E) {
                        E.style.opacity = "1";
                        E.style.transform = "translateY(0)";
                    }
                    const aa = setTimeout(() => {
                        G.state = "shown";
                    }, 400);
                    G.timers.push(aa);
                }, 300);
                G.timers.push(Z);
            });
            C.addEventListener("mouseleave", function () {
                if (G.touchActive) {
                    return;
                }
                G.timers.forEach((dd) => clearTimeout(dd));
                G.timers = [];
                G.state = "hiding";
                if (E) {
                    E.style.opacity = "0";
                    E.style.transform = "translateY(10px)";
                }
                const bb = setTimeout(() => {
                    if (D) {
                        D.style.opacity = "0";
                    }
                    const cc = setTimeout(() => {
                        G.state = "idle";
                    }, 500);
                    G.timers.push(cc);
                }, 100);
                G.timers.push(bb);
            });
            C.addEventListener("click", function () {
                if (G.touchActive) {
                    G.touchActive = false;
                } else {
                    F.touchActive = false;
                    G.touchActive = true;
                }
            });
            C.style.cursor = "pointer";
        }
    }
    kk();
    yy();
    qqq();
    ttt();
    h();
    rr();
    let vvv = window.innerWidth <= 768;
    function www() {
        const xxx = window.innerWidth <= 768;
        if (vvv !== xxx) {
            vvv = xxx;
            h();
        }
    }
    window.addEventListener("resize", www);
}
function kk() {
    const ll = document.querySelector(".scroll-icon");
    const mm = document.querySelector(".scroll-text");
    if (ll) {
        ll.addEventListener("click", function () {
            const nn = document.getElementById("brand");
            if (nn) {
                window.scrollTo({ top: nn.offsetTop, behavior: "smooth" });
            }
        });
    }
    if (mm) {
        mm.addEventListener("click", function () {
            const pp = document.getElementById("brand");
            if (pp) {
                window.scrollTo({ top: pp.offsetTop, behavior: "smooth" });
            }
        });
    }
}
function rr() {
    const ss = document.querySelectorAll(
        '.nav-link[href="#main"], .nav-link[href="#brand"], .nav-link[href="#journey"]'
    );
    ss.forEach((tt) => {
        tt.addEventListener("click", function (uu) {
            uu.preventDefault();
            const vv = this.getAttribute("href").substring(1);
            const ww = document.getElementById(vv);
            if (ww) {
                window.scrollTo({ top: ww.offsetTop, behavior: "smooth" });
            }
        });
    });
}
let xx = { state: "idle", currentStep: "1", timers: [] };
function yy() {
    const zz = document.querySelectorAll(".process-step");
    zz.forEach((aaa) => {
        aaa.addEventListener("click", function () {
            const bbb = this.getAttribute("data-step");
            if (bbb === xx.currentStep || xx.state === "transitioning") {
                return;
            }
            xx.timers.forEach((ppp) => clearTimeout(ppp));
            xx.timers = [];
            xx.state = "transitioning";
            xx.currentStep = bbb;
            zz.forEach((ggg) => ggg.classList.remove("active"));
            const hhh = document.querySelector(
                `.process-step[data-step="${bbb}"]`
            );
            if (hhh) {
                hhh.classList.add("active");
            }
            const kkk = document.querySelectorAll(".process-image");
            const lll = document.querySelector(
                `.process-image[data-step="${bbb}"]`
            );
            const mmm = document.querySelector(".process-image.active");
            if (!lll || lll === mmm) {
                xx.state = "idle";
                return;
            }
            if (mmm) {
                mmm.classList.add("fade-out");
                mmm.classList.remove("active");
            }
            lll.style.transform = "translateX(100%)";
            lll.style.opacity = "1";
            lll.offsetHeight;
            lll.classList.add("slide-in");
            lll.style.transform = "translateX(0)";
            const nnn = setTimeout(() => {
                kkk.forEach((ooo) => {
                    if (ooo !== lll) {
                        ooo.classList.remove("active", "fade-out", "slide-in");
                        ooo.style.opacity = "0";
                        ooo.style.transform = "translateX(100%)";
                    }
                });
                lll.classList.remove("slide-in");
                lll.classList.add("active");
                xx.state = "idle";
            }, 800);
            xx.timers.push(nnn);
        });
    });
}
function qqq() {
    const rrr = document.createElement("div");
    rrr.style.cssText =
        "position:fixed;top:0;left:0;width:0%;height:3px;background:linear-gradient(90deg,#E5B874,#37000A);z-index:9999;transition:width 0.3s ease;";
    document.body.appendChild(rrr);
    window.addEventListener("scroll", function () {
        const sss =
            (window.scrollY /
                (document.documentElement.scrollHeight - window.innerHeight)) *
            100;
        rrr.style.width = sss + "%";
    });
}
function ttt() {
    const uuu = document.querySelector(".hero-content");
    if (!uuu) return;
    uuu.style.opacity = "0";
    uuu.style.transform = "translateY(30px)";
    uuu.style.transition = "opacity 1s ease, transform 1s ease";
    setTimeout(() => {
        uuu.style.opacity = "1";
        uuu.style.transform = "translateY(0)";
    }, 5500);
    setTimeout(() => {
        uuu.style.opacity = "0";
        uuu.style.transform = "translateY(-30px)";
    }, 11000);
}
document.addEventListener("DOMContentLoaded", function () {
    if (!window.ApogeeLoader || !document.getElementById("apogee-loader")) {
        g();
    }
});
window.addEventListener("apogeeLoadingComplete", function () {
    g();
});
window.ApogeeUtils = {
    scrollToSection: function (zzz) {
        const aaaa = document.getElementById(zzz);
        if (aaaa) {
            window.scrollTo({ top: aaaa.offsetTop - 100, behavior: "smooth" });
        }
    },
    getCurrentSection: function () {
        const cccc = document.querySelectorAll("section[id]");
        const dddd = window.scrollY + 150;
        for (let eeee of cccc) {
            const ffff = eeee.offsetTop;
            const gggg = eeee.offsetHeight;
            if (dddd >= ffff && dddd < ffff + gggg) {
                return eeee.getAttribute("id");
            }
        }
        return null;
    },
};
function hhhh() {
    const iiii = document.getElementById("contactModal");
    if (iiii) {
        iiii.classList.add("active");
        document.body.style.overflow = "hidden";
    }
}
function jjjj() {
    const kkkk = document.getElementById("contactModal");
    if (kkkk) {
        kkkk.classList.remove("active");
        document.body.style.overflow = "auto";
        const llll = document.getElementById("contactForm");
        if (llll) llll.reset();
        mmmm("개인");
    }
}
function nnnn() {
    const oooo = document.getElementById("privacyModal");
    if (oooo) {
        oooo.classList.add("active");
        document.body.style.overflow = "hidden";
    }
}
function pppp() {
    const qqqq = document.getElementById("privacyModal");
    if (qqqq) {
        qqqq.classList.remove("active");
        document.body.style.overflow = "auto";
    }
}
function rrrr() {
    const ssss = document.getElementById("privacy");
    if (ssss) {
        ssss.checked = true;
    }
    tttt();
    pppp();
}
function mmmm(uuuu) {
    const vvvv = document.querySelectorAll(".contact-type-btn");
    vvvv.forEach((wwww) => wwww.classList.remove("active"));
    const xxxx = document.querySelector(`[data-type="${uuuu}"]`);
    if (xxxx) xxxx.classList.add("active");
    const yyyy = document.getElementById("nameLabel");
    const zzzz = document.getElementById("name");
    if (uuuu === "개인") {
        yyyy.textContent = "성함";
        zzzz.placeholder = "성함을 입력하세요";
    } else {
        yyyy.textContent = "기업명";
        zzzz.placeholder = "기업명을 입력하세요";
    }
}
async function aaaaa(bbbbb) {
    bbbbb.preventDefault();
    const ccccc = bbbbb.target;
    const ddddd = new FormData(ccccc);
    const eeeee =
        document.querySelector(".contact-type-btn.active")?.dataset.type ||
        "개인";
    const fffff = eeeee === "개인" ? "PERSONAL" : "BUSINESS";
    const ggggg = {
        type: fffff,
        name: ddddd.get("name"),
        phone: ddddd.get("phone"),
        content: ddddd.get("message"),
    };
    try {
        const hhhhh = await fetch(
            "https://before-cafe24.vercel.app/api/apogee/contact",
            {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(ggggg),
            }
        );
        if (hhhhh.ok) {
            alert("문의사항이 성공적으로 접수되었습니다.");
            ccccc.reset();
            tttt();
            jjjj();
        } else {
            alert("문의 전송에 실패했습니다.");
        }
    } catch {
        alert("네트워크 오류가 발생했습니다.");
    }
}
function tttt() {
    const kkkkk = document.getElementById("name");
    const lllll = document.getElementById("phone");
    const mmmmm = document.getElementById("message");
    const nnnnn = document.getElementById("privacy");
    const ooooo = document.querySelector(".modal-submit-btn");
    if (!kkkkk || !lllll || !mmmmm || !nnnnn || !ooooo) {
        return;
    }
    const ppppp = kkkkk.value.trim() !== "";
    const qqqqq = lllll.value.trim() !== "";
    const rrrrr = mmmmm.value.trim() !== "";
    const sssss = nnnnn.checked;
    const ttttt = ppppp && qqqqq && rrrrr && sssss;
    if (ttttt) {
        ooooo.classList.add("active");
    } else {
        ooooo.classList.remove("active");
    }
}
document.addEventListener("DOMContentLoaded", function () {
    const uuuuu = document.getElementById("contactForm");
    if (uuuuu) {
        uuuuu.addEventListener("submit", aaaaa);
        [
            document.getElementById("name"),
            document.getElementById("phone"),
            document.getElementById("message"),
        ].forEach((vvvvv) => {
            if (vvvvv) vvvvv.addEventListener("input", tttt);
        });
        const wwwww = document.getElementById("privacy");
        if (wwwww) wwwww.addEventListener("change", tttt);
        tttt();
    }
});
let xxxxx = null;
function yyyyy() {
    xxxxx = new Swiper(".bw-product-swiper", {
        slidesPerView: 2.3,
        spaceBetween: 30,
        loop: true,
        autoplay: { delay: 1000, disableOnInteraction: false },
        speed: 800,
        breakpoints: {
            320: { slidesPerView: 1.3, spaceBetween: 10 },
            768: { slidesPerView: 1.5, spaceBetween: 10, centeredSlides: true },
            1024: { slidesPerView: 2.3, spaceBetween: 15 },
        },
        pagination: { el: ".bw-swiper-pagination", type: "progressbar" },
        grabCursor: true,
        on: {
            init: function () {
                this.autoplay.stop();
            },
        },
    });
    const zzzzz = document.querySelector(".bw-product-section");
    if (zzzzz) {
        const aaaaaa = new IntersectionObserver(
            (bbbbbb) => {
                bbbbbb.forEach((cccccc) => {
                    if (cccccc.isIntersecting) {
                        if (xxxxx && !xxxxx.autoplay.running) {
                            xxxxx.autoplay.start();
                        }
                    } else {
                        if (xxxxx && xxxxx.autoplay.running) {
                            xxxxx.autoplay.stop();
                        }
                    }
                });
            },
            { threshold: 0.3 }
        );
        aaaaaa.observe(zzzzz);
    }
}
window.openContactModal = hhhh;
window.closeContactModal = jjjj;
window.selectContactType = mmmm;
window.openPrivacyModal = nnnn;
window.closePrivacyModal = pppp;
window.agreeAndClosePrivacyModal = rrrr;
